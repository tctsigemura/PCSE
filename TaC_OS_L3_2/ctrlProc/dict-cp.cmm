#include <kernel.h>
#include <fatFs.h>
#include <util.h>

#include "dict.h"


Dict[] dict = array(MAX_DICT_SIZE);


DIR dir = {null, 0, 0, 0, 0};


public int getDictLen() { 
    return  sizeof(dict) / sizeof(dict[0]); 
}


public char[] getDictItem(int idx) {
    return dict[idx].name
}

public void newDict(char[] path) {
    int fd = openDir(path);
    if (fd<0) {
        panic("can't open the %s.", path);
    } else {
        for (int i=0; readDir(fd, dir)>0; i=i+1) {
            if (dictlen > MAX_DICT_SIZE) break;

            dict[i].name = malloc(26);
            dict[i].artist = malloc(13);

            strcpy(dict[i].name, dir.name);

            // DOTO: 
            strcpy(dict[i].artist, "i13harada1s");

            dict[i].dir = dir.attr & 0x10;   // 1 when dir is directory else 0
            
            // DOTO:
            dict[i].len = 0;
        } 
    }
    close(fd);
}


public void renewDict(char[] path) {
    // initialize dict be created
    int len = getDictLen();
    for (int i=0; i<len; i=i+1) {
        free(dict[i].name);
        free(dict[i].artist);
        dict[i].attr = 0;
        dict[i].len = 0;
    }

    newDict(path);      // recreate dict
}



//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/*
char[][] dict = array(MAXROW, MAXCOL);


DIR dir = {null, 0, 0, 0, 0};

int len = 0;


public int getDictLen() { 
    return len; 
}


public char[] getDictItem(int idx) {
    return dict[idx];
}


public void newDict(char[] path) {
    len = 0;

    int fd = openDir(path);
    if (fd<0) {
        panic("can't open the %s.", path);
    } else {
        for (int i=0; readDir(fd, dir)>0; i=i+1) {
            dict[i] = malloc(13);
            strcpy(dict[i], dir.name);

            len = len + 1;
        } 
    }
    close(fd);
}
*/