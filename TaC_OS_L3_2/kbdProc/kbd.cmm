/*
 * TaC-OS Source Code
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2011 - 2013 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * kbdProc/kbd.cmm : キーボードドライバ
 *
 * 2011.05.20           : 新規作成
 *
 * $Id$
 *
 */

#include <util.h>
#include <kernel.h>        // セマフォを使用するために必要

#include "kbd.h"

// シフトキーの状態
boolean rShift = false;    // 右シフトキー
boolean lShift = false;    // 左シフトキー

// 状態マシン
int stat = 0;
char kbdFSM(char c) {
  char retVal = 0;
  if (stat==0) {
    if      (c==0xe0) stat = 1;
    else if (c==0xf0) stat = 2;
    else if (c==0x59) rShift = true;
    else if (c==0x12) lShift = true;
    else if (rShift || lShift) retVal = c | 0x100;
    else retVal = c;
  } else if (stat==1) {
    if (c!=0xf0) stat = 0;
  } else /* if (stat==2) */ {
    if      (c==0x59) rShift = false;
    else if (c==0x12) lShift = false;
    stat = 0;
  }
  return retVal;
}

// スキャンコードバッファ
int  sem;                             // code を排他制御するセマフォ
char code = 0;

// 割り込みハンドラ
interrupt kbdInt() {
  char c = in(0x0004);                // ハードウェアからスキャンコード取得
  c = kbdFSM(c);                      // FSM を使用して変換
  if (c!=0) {
    code = c;                         // 有効なら書き込む
    semV(sem);                        // プロセスを起こす
  }
}

// 初期化ルーチン
public void kbdInit() {
  int[] vect = __ItoA(0xfff0);
  vect[10] = addrof(kbdInt);          // 割込みベクタ初期化
  in(0x0004);                         // 受信バッファのゴミをとる
  out(0x0005,0x40);                   // PS/2受信割込み許可
  sem = newSem(0);                    // キー入力同期用のセマフォ
}

// スキャンコード取得
public char getKeyCode() {
  semP(sem);                          // キーボード待ちで止まる
  char c = code;
  code = 0;
  return c;
}
